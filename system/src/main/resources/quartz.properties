# 固定前缀org.quartz
# 主要分为scheduler、threadPool、jobStore、plugin等部分
#org.quartz.scheduler.instanceName = FasterQuartzScheduler
org.quartz.scheduler.rmi.export = false
org.quartz.scheduler.rmi.proxy = false
org.quartz.scheduler.wrapJobExecutionInUserTransaction = false
#调度器实例编号自动生成
org.quartz.scheduler.instanceId = AUTO

# 线程池配置
# 实例化ThreadPool时，使用的线程类为SimpleThreadPool
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
# 并发个数
org.quartz.threadPool.threadCount = 5
# 优先级
org.quartz.threadPool.threadPriority = 5
# 配置是否启动自动加载数据库内的定时任务，默认true
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true

# 持久化配置
org.quartz.jobStore.misfireThreshold = 6000
# 持久化方式配置，默认存储在内存中org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
# 持久化方式配置数据驱动，MySQL数据库
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# quartz相关数据表前缀名
org.quartz.jobStore.tablePrefix = QRTZ_
# 开启分布式部署
org.quartz.jobStore.isClustered = true
# 分布式节点有效性检查时间间隔，单位：毫秒
org.quartz.jobStore.clusterCheckinInterval = 20000
# 数据库别名 随便取
org.quartz.jobStore.dataSource = qzDS

# 数据源连接信息，使用hikaricp连接池
org.quartz.dataSource.qzDS.provider = hikaricp
org.quartz.dataSource.qzDS.driver = com.mysql.jdbc.Driver
org.quartz.dataSource.qzDS.URL = jdbc:mysql://119.23.71.201:3306/faster?characterEncoding=utf8
org.quartz.dataSource.qzDS.user = root
org.quartz.dataSource.qzDS.password = kDfh9GZ?Q(BE
org.quartz.dataSource.qzDS.maxConnections = 10


